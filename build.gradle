plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.bmuschko.docker-spring-boot-application' version '8.0.0'
}

group = 'mateusvalentim'
version = '0.0.1-SNAPSHOT'

bootJar {
	archiveBaseName.set('aws_mv_project1')
	archiveVersion.set('1.2.0')
}

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.2.0'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	implementation 'com.amazonaws:aws-java-sdk-sns:1.12.532'
}

tasks.withType(Test) {
	enabled = false
}

docker {
	springBootApplication {
		baseImage = 'openjdk:17-jdk-alpine'
		ports = [8080]
		images = ["${project.group}/${bootJar.archiveBaseName.get()}:${bootJar.archiveVersion.get()}"]
	}
}
